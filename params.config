/* 
 * Defines default parameters 
 * To change any of these parameters, include the variable in your command with 2 dashes "--"
 *  nextflow run main_AMR++.nf -profile conda --reads "/path/to/other/reads/*_R{1,2}.fastq.gz"
 */ 


params {
     /* Display help message */
    help = false

    /* Location of forward and reverse read pairs */
    reads = "${baseDir}/data/raw/*_R{1,2}.fastq.gz"

    /* Optional input for bam files for use with "--pipeline bam_resistome" */
    bam_files = null

    /* Location of reference/host genome */
    host = "/home/jupyter/workspace/ReferenceGenomes/Bos_taurus.ARS-UCD2.0.dna_rm.toplevel.fa"

    /* Optionally, you can specify the location of the host index files created with bwa with the path and wildcard (*): */
    host_index = "/home/jupyter/workspace/ReferenceGenomes/Bos_taurus.ARS-UCD2.0.dna_rm.toplevel.fa*"

    /* Output directory */
    output = "test_results"
    
    /* Kraken database location. If "null" then will download */   
    kraken_db = "null"

    /* Location of amr index files with wildcard */
    /* If you want the bowtie indexes built, use the bareword "null" */
    //amr_index = "${baseDir}/data/amr/megares_database_v3*"
    amr_index = null

    /* Location of antimicrobial resistance (MEGARes) database */
    amr = "${baseDir}/data/amr/megares_database_v3.fasta"

    /* Location of amr annotation file */
    annotation = "${baseDir}/data/amr/megares_annotations_v3.00.csv"

    /* Add SNP analysis */
    snp = "Y"

    /* Add deduplicaation analysis */
    deduped = "N"
    prefix = "AMR"

    /* Number of threads */
    threads = 8

    /* Trimmomatic trimming parameters */
    adapters = "${baseDir}/data/adapters/nextera.fa"

    leading = 3
    trailing = 3
    slidingwindow = "4:15"
    minlen = 36

    /* Resistome threshold */
    threshold = 80

    /* Starting rarefaction level */
    min = 5

    /* Ending rarefaction level */
    max = 100

    /* Number of levels to skip */
    skip = 5

    /* Number of iterations to sample at */
    samples = 1

    /* multiQC */
    multiqc = "$baseDir/data/multiqc"

    /* Qiime2 */

    /* Dada parameters */
    p_trim_left_f = 25

    p_trim_left_r = 26

    p_trunc_len_f = 225

    p_trunc_len_r = 220

    /* Bracken taxonomic levels */
    /* comma separated list options:  D,P,C,O,F,G,S  */
    taxlevel = "D,P,C,O,F,G,S"


    /* qiime2 bayes classifier */
    dada2_db = "$baseDir/data/qiime/gg-13-8-99-515-806-nb-classifier.qza"
}

process {
    // Stage resource usages
    // See config for singularity install details
    cache = 'lenient'


    withName: 'runqc' {
        cpus = {16}
 	params.threads = 16
        memory = "24.GB"
    }

    withName: 'bowtie2_align' {
        cpus = {32}
 	params.threads = 32
        memory = "128.GB"
    }

    withName: 'bwa_align' {
        cpus = {32}
 	params.threads = 32
        memory = "128.GB"
    }
    
    withName: 'runkraken' {
        cpus = {16}
	params.threads = 16
        memory = "245.GB"
    }
}


// The location of each dependency binary needs to be specified here.
// The examples listed below are assuming the tools are already in the $PATH, however,
// the absolute path to each tool can be entered individually.
// Only change things here if you need to point to a specific binary on your computing system.
env {
    /* These following tools are required to run AmrPlusPlus*/
    JAVA = "java"
    TRIMMOMATIC = "trimmomatic"
    FASTP = "fastp"
    PYTHON3 = "python3"
    BWA = "bwa"
    BOWTIE2 = "bowtie2"
    SAMTOOLS = "samtools"
    BEDTOOLS = 	"bedtools"
    RESISTOME = 	"resistome"
    RAREFACTION = 	"rarefaction"
    SNPFINDER = 	"snpfinder"
    /* These next tools are optional depending on which analyses you want to run */
    KRAKEN2 = "kraken2"
    QIIME = "qiime"
}
